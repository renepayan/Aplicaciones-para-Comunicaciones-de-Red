/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.payansoftware.apcr.practica1.cliente;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import org.payansoftware.apcr.practica1.clases.Compra;
import org.payansoftware.apcr.practica1.clases.Producto;

/**
 *
 * @author rene
 */
public class ListaDeProductos extends javax.swing.JFrame {
    private Socket conexion;
    private DataOutputStream salida;
    private DataInputStream entrada;
    private List<Producto> productos;
    private CarritoDeCompras carrito = null;
    
    /**
     * Creates new form ListaDeProductos
     */
    public ListaDeProductos(Socket conexion) {
        this.conexion = conexion;
        initComponents();
    }
    protected void inicializarFlujos(){
        try{
            salida = new DataOutputStream(conexion.getOutputStream());
            entrada = new DataInputStream(conexion.getInputStream());
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    protected void cargarProductos(){
        productos = new ArrayList<Producto>();
        try{
            salida.writeInt(1);
            System.out.println("Ya envie la orden");
            int cuantosProductos = entrada.readInt();
            System.out.println("Voy a recibir "+cuantosProductos+" productos");
            for(int i = 0; i < cuantosProductos; i++){
                long cantidadDeBytes = entrada.readLong();
                System.out.println("Este producto tiene "+cantidadDeBytes+" bytes");
                byte[] entradaDatos = new byte[(int)cantidadDeBytes];
                int bytesRecibidos = 0;
                while(bytesRecibidos<cantidadDeBytes){
                    int offset = bytesRecibidos;
                    int longitud = Math.min(1024, (int)cantidadDeBytes-bytesRecibidos);
                    int leidosEnEstaPasada = entrada.read(entradaDatos,offset,longitud);
                    bytesRecibidos+=leidosEnEstaPasada;                  
                }                
                ByteArrayInputStream bis = new ByteArrayInputStream(entradaDatos);
                ObjectInputStream ois = new ObjectInputStream(bis);
                Producto p  = (Producto)ois.readObject();
                productos.add(p);  
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    protected void mostrarProductos(){       
        jPanelProductos.removeAll();
        jPanelProductos.setSize(500,500);
        jPanelProductos.setLayout(new BoxLayout(jPanelProductos, BoxLayout.PAGE_AXIS));
        Producto[] buffer = new Producto[4];
        int pos = 0;
        for(Producto p: productos){
            if(pos < 4){
                buffer[pos++] = p;
            }else{
                JPanel trinidad = new JPanel();
                pos = 1;
                for(int i = 0; i < 4; i++){
                    boolean estaEnLista = CarritoDeCompras.buscarProducto(buffer[i].getId());
                    trinidad.add(buffer[i].toJPanel(estaEnLista));
                }              
                jPanelProductos.add(trinidad);
                buffer[0] = p;
            }
        }
        JPanel trinidad = new JPanel();        
        for(int i = 0; i < pos; i++){
            boolean estaEnLista = CarritoDeCompras.buscarProducto(buffer[i].getId());
            trinidad.add(buffer[i].toJPanel(estaEnLista));
        }
        jPanelProductos.add(trinidad);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRecargar = new javax.swing.JButton();
        btnVerCarrito = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelProductos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRecargar.setText("Recargar");
        btnRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecargarActionPerformed(evt);
            }
        });

        btnVerCarrito.setText("Ver el carrito");
        btnVerCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerCarritoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelProductosLayout = new javax.swing.GroupLayout(jPanelProductos);
        jPanelProductos.setLayout(jPanelProductosLayout);
        jPanelProductosLayout.setHorizontalGroup(
            jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 702, Short.MAX_VALUE)
        );
        jPanelProductosLayout.setVerticalGroup(
            jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 549, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanelProductos);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Carrito de compras de Payán Téllez René 3CV16");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnRecargar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerCarrito)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRecargar)
                    .addComponent(btnVerCarrito)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecargarActionPerformed
        ///mostrarSpinner();
        cargarProductos();
        mostrarProductos();
        //quitarSpinner();
    }//GEN-LAST:event_btnRecargarActionPerformed

    private void btnVerCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerCarritoActionPerformed
        // TODO add your handling code here:
        if(carrito == null){
            carrito = new CarritoDeCompras(productos, this, conexion, salida, entrada);
        }else{
            carrito.setProductos(productos);
            carrito.crearTabla();
        }
        carrito.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVerCarritoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecargar;
    private javax.swing.JButton btnVerCarrito;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelProductos;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
